"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[217],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},h=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),h=r,f=u["".concat(p,".").concat(h)]||u[h]||d[h]||l;return t?a.createElement(f,o(o({ref:n},c),{},{components:t})):a.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=h;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=t[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9803:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const l={id:"installation",title:"Installation",sidebar_label:"Installation",slug:"/installation"},o=void 0,i={unversionedId:"installation",id:"installation",title:"Installation",description:"NOTE: These docs are under active development \ud83d\udc77\u200d\u2640\ufe0f\ud83d\udc77",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/float-subgraph-uncrashable/docs/installation",draft:!1,editUrl:"https://github.com/Float-Capital/float-subgraph-uncrashable/tree/dev/docs/docs/installation.md",tags:[],version:"current",frontMatter:{id:"installation",title:"Installation",sidebar_label:"Installation",slug:"/installation"},sidebar:"someSidebar",previous:{title:"Overview",permalink:"/float-subgraph-uncrashable/docs/overview"},next:{title:"Configuration",permalink:"/float-subgraph-uncrashable/docs/configuration"}},p={},s=[{value:"Graph CLI",id:"graph-cli",level:2},{value:"Standalone npm package",id:"standalone-npm-package",level:2},{value:"npm",id:"npm",level:3},{value:"Yarn",id:"yarn",level:3}],c={toc:s};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("sub",null,(0,r.kt)("sup",null," NOTE: These docs are under active development \ud83d\udc77\u200d\u2640\ufe0f\ud83d\udc77 ")),(0,r.kt)("hr",null),(0,r.kt)("p",null,"Subgraph Uncrashable is available as a standalone npm package or using the Graph CLI as an optional flag."),(0,r.kt)("h2",{id:"graph-cli"},"Graph CLI"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"graph codegen [options] [<subgraph-manifest>]")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Options:\n-h, --help Show usage information\n-o, --output-dir <path> Output directory for generated types (default: generated/)\n--skip-migrations Skip subgraph migrations (default: false)\n-w, --watch Regenerate types when subgraph files change (default: false)\n-u, --uncrashable Generate Float Subgraph Uncrashable helper file\n-uc, --uncrashable-config <path> Directory for uncrashable config (default: ./uncrashable-config.yaml)\n")),(0,r.kt)("p",null,"Run the graph uncrashable codegen via the Graph CLI:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"graph codegen -u")),(0,r.kt)("h2",{id:"standalone-npm-package"},"Standalone npm package"),(0,r.kt)("p",null,"The Subgraph Uncrashable tool can be installed using ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn"),":"),(0,r.kt)("h3",{id:"npm"},"npm"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"npm install @float-capital/float-subgraph-uncrashable")),(0,r.kt)("h3",{id:"yarn"},"Yarn"),(0,r.kt)("p",null," ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn add @float-capital/float-subgraph-uncrashable")),(0,r.kt)("p",null,"Run the graph uncrashable codegen as a standalone package:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"uncrashable")))}u.isMDXComponent=!0}}]);